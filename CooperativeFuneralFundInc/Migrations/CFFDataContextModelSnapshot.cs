// <auto-generated />
using System;
using CooperativeFuneralFundInc.Models.SupplyRequest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CooperativeFuneralFundInc.Migrations
{
    [DbContext(typeof(CFFDataContext))]
    partial class CFFDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.ClientSupplier", b =>
                {
                    b.Property<int>("ClientSupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientSupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientSupplierID");

                    b.ToTable("ClientSuppliers");

                    b.HasData(
                        new
                        {
                            ClientSupplierID = 1,
                            ClientSupplierName = "Client 1"
                        },
                        new
                        {
                            ClientSupplierID = 2,
                            ClientSupplierName = "Client 2"
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.NotesSection", b =>
                {
                    b.Property<int>("NotesSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplyRequestId")
                        .HasColumnType("int");

                    b.HasKey("NotesSectionId");

                    b.HasIndex("SupplyRequestId");

                    b.ToTable("NotesSection");

                    b.HasData(
                        new
                        {
                            NotesSectionId = 1,
                            Archived = false,
                            CreatedBy = "Developer",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "Test note",
                            SupplyRequestId = 1
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.OrderItems", b =>
                {
                    b.Property<int>("OrderItemsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrderItemsName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderItemsID");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemsID = 1,
                            OrderItemsName = "Preneed agreement"
                        },
                        new
                        {
                            OrderItemsID = 2,
                            OrderItemsName = "Account update/Claim form"
                        },
                        new
                        {
                            OrderItemsID = 3,
                            OrderItemsName = "Itemizations form"
                        },
                        new
                        {
                            OrderItemsID = 4,
                            OrderItemsName = "Return envelopes."
                        },
                        new
                        {
                            OrderItemsID = 5,
                            OrderItemsName = "Postage paid envelopes."
                        },
                        new
                        {
                            OrderItemsID = 6,
                            OrderItemsName = "Deposit tickets"
                        },
                        new
                        {
                            OrderItemsID = 7,
                            OrderItemsName = "Planning guides"
                        },
                        new
                        {
                            OrderItemsID = 8,
                            OrderItemsName = "Funding your funeral in advance brochure"
                        },
                        new
                        {
                            OrderItemsID = 9,
                            OrderItemsName = "Monthly monitors"
                        },
                        new
                        {
                            OrderItemsID = 10,
                            OrderItemsName = "Service and merchandise forms"
                        },
                        new
                        {
                            OrderItemsID = 11,
                            OrderItemsName = "Investment election form"
                        },
                        new
                        {
                            OrderItemsID = 12,
                            OrderItemsName = "Other"
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.OwnerName", b =>
                {
                    b.Property<int>("OwnerNameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OwnerNameName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OwnerNameID");

                    b.ToTable("OwnerNames");

                    b.HasData(
                        new
                        {
                            OwnerNameID = 1,
                            OwnerNameName = "Person 1"
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.SupplyRequest", b =>
                {
                    b.Property<int>("SupplyRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientSupplierID")
                        .HasColumnType("int");

                    b.Property<string>("CreateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderItemsID")
                        .HasColumnType("int");

                    b.Property<int>("OwnerNameID")
                        .HasColumnType("int");

                    b.Property<string>("StatusComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplyRequestStatusID")
                        .HasColumnType("int");

                    b.Property<int>("SupplyRequestTypeID")
                        .HasColumnType("int");

                    b.Property<int>("SuppyRequestOriginId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplyRequestId");

                    b.HasIndex("ClientSupplierID");

                    b.HasIndex("OrderItemsID");

                    b.HasIndex("OwnerNameID");

                    b.HasIndex("SupplyRequestStatusID");

                    b.HasIndex("SupplyRequestTypeID");

                    b.HasIndex("SuppyRequestOriginId");

                    b.ToTable("SupplyRequests");

                    b.HasData(
                        new
                        {
                            SupplyRequestId = 1,
                            ClientSupplierID = 1,
                            CreateTime = "Test",
                            CreatedBy = "Test",
                            OrderItemsID = 1,
                            OwnerNameID = 1,
                            StatusComments = "test",
                            SupplyRequestStatusID = 1,
                            SupplyRequestTypeID = 1,
                            SuppyRequestOriginId = 1,
                            UpdatedBy = "Test"
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.SupplyRequestStatus", b =>
                {
                    b.Property<int>("SupplyRequestStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplyRequestStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplyRequestStatusID");

                    b.ToTable("SupplyRequestStatus");

                    b.HasData(
                        new
                        {
                            SupplyRequestStatusID = 1,
                            SupplyRequestStatusName = "New"
                        },
                        new
                        {
                            SupplyRequestStatusID = 2,
                            SupplyRequestStatusName = "In-Process"
                        },
                        new
                        {
                            SupplyRequestStatusID = 3,
                            SupplyRequestStatusName = "Completed"
                        },
                        new
                        {
                            SupplyRequestStatusID = 4,
                            SupplyRequestStatusName = "On hold"
                        },
                        new
                        {
                            SupplyRequestStatusID = 5,
                            SupplyRequestStatusName = "Cancelled"
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.SupplyRequestType", b =>
                {
                    b.Property<int>("SupplyRequestTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplyRequestTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplyRequestTypeID");

                    b.ToTable("SupplyRequestTypes");

                    b.HasData(
                        new
                        {
                            SupplyRequestTypeID = 1,
                            SupplyRequestTypeName = "Vendor"
                        },
                        new
                        {
                            SupplyRequestTypeID = 2,
                            SupplyRequestTypeName = "Client"
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.SuppyRequestOrigin", b =>
                {
                    b.Property<int>("SuppyRequestOriginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SuppyRequestOriginName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuppyRequestOriginId");

                    b.ToTable("SuppyRequestOrigins");

                    b.HasData(
                        new
                        {
                            SuppyRequestOriginId = 1,
                            SuppyRequestOriginName = "Phone"
                        },
                        new
                        {
                            SuppyRequestOriginId = 2,
                            SuppyRequestOriginName = "Fax"
                        },
                        new
                        {
                            SuppyRequestOriginId = 3,
                            SuppyRequestOriginName = "Email"
                        },
                        new
                        {
                            SuppyRequestOriginId = 4,
                            SuppyRequestOriginName = "Mail"
                        },
                        new
                        {
                            SuppyRequestOriginId = 5,
                            SuppyRequestOriginName = "Regional manager"
                        },
                        new
                        {
                            SuppyRequestOriginId = 6,
                            SuppyRequestOriginName = "Other"
                        });
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.NotesSection", b =>
                {
                    b.HasOne("CooperativeFuneralFundInc.Models.SupplyRequest.SupplyRequest", "SupplyRequest")
                        .WithMany()
                        .HasForeignKey("SupplyRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CooperativeFuneralFundInc.Models.SupplyRequest.SupplyRequest", b =>
                {
                    b.HasOne("CooperativeFuneralFundInc.Models.SupplyRequest.ClientSupplier", "Client")
                        .WithMany()
                        .HasForeignKey("ClientSupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativeFuneralFundInc.Models.SupplyRequest.OrderItems", "OrderItems")
                        .WithMany()
                        .HasForeignKey("OrderItemsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativeFuneralFundInc.Models.SupplyRequest.OwnerName", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativeFuneralFundInc.Models.SupplyRequest.SupplyRequestStatus", "Status")
                        .WithMany()
                        .HasForeignKey("SupplyRequestStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativeFuneralFundInc.Models.SupplyRequest.SupplyRequestType", "SupplyRequestType")
                        .WithMany()
                        .HasForeignKey("SupplyRequestTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativeFuneralFundInc.Models.SupplyRequest.SuppyRequestOrigin", "SupplyRequestOrigin")
                        .WithMany()
                        .HasForeignKey("SuppyRequestOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
